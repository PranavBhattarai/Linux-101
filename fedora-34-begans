
#1shot to nuke them all
sudo dnf upgrade && sudo dnf autoremove && flatpak update && flatpak uninstall --unused
Thing to remember before using that command is:
	- Its not good to use "system-upgrade" unless you know the changelog.
	- Its not good to autoremove all dependencies to avoid breaking something. Instead use, "dnf mark installed".

##Safest way to update without breaking/crashing anything
sudo dnf offline-upgrade download --best --refresh
sudo dnf offline-upgrade reboot
sudo dnf offline-upgrade clean

0. Proper way to update from older fedora version to new fedora version
sudo dnf update --refresh
sudo dnf distro-sync
sudo dnf system-upgrade download --releasever=pranav			//remove "pranav" & write new fedora version, u want to install
sudo dnf system-upgrade reboot
sudo dnf install rpmconf
sudo dnf rpmconf -a
sudo dnf install remove-retired-packages
remove-retired-packages
sudo dnf repoquery --unsatisfied					//list of packages with broken dependencies
sudo dnf autoremove
sudo dnf remove $(dnf repoquery --extras)				//observe it and carefully remove packages which u don't need

sudo dnf install symlinks						//Clean-up old symlinks
sudo symlinks -r /usr | grep dangling
sudo symlinks -r -d /usr

sudo rpm --rebuilddb							//Rebuilding the RPM database

1. Enable Gracefull shutdown
Inside /etc/sysctl.d/pranav-sysrq.conf file write:
kernel.sysrq=1

Now it works. To trigger press:
Alt + PrtScr + REISUB or REISUO		//b = reboot	O = shutdown

2. Create udev rule/script to block damanged USB port:
Inside /usr/local/bin/pranav-rule.sh file write:
<need-to-learn-about-this>

3. Alternative of deborphan in Fedroa
package-cleanup --leaves		//need to install dnf-utils first, or
package-ckeanup --leaves --all
sudo dnf autoremove			//to remove unneccessary packages

4. See details about the package
dnf info <package-name>

5. See dependency of a package
rpm -q --whatrequires <package-name>

6. See display protocol AKA desktop session in use
echo $XDG_SESSION_TYPE

7. Grep the lines before & after word matches, example:
sudo dmseg | grep -B 4 -A 4 'psmouse'	

8. Regular expressing using Grep to search patterns, example:
lspci -k | grep -EA 'VGA|3D|Display'				

9. Environment variables
printenv			//show all env variables

10. Grep multiple words
journalctl -k | grep -i -e usb -e error -e warning -e failed

11. Show today journal/log only
journalctl -k

12. Update Grub
sudo grub2-mkconfig --output=/boot/grub2/grub.cfg

13. Copy a text from terminal to clipboard. Trick.

cat reportPhising | xclip sel -c

14. Create 100's of txt file and rename to text.

seq 100 | xargs -I {} touch {}.txt	//Can also use any other symbol instead of curly braces

15. Install a package without installing its weak dependencies

sudo dnf install <package-name> --setopt=install_weak_deps=False

16. Find and rename words or letter with another

echo 'abc xyz' | tr 'abc' 'ABC'			//Using a single inverted comma here is optional.

output:-> ABC xyz

17. Find and delete words (or even space)

	echo 'abc xyz' | tr -d 'ax'
output: bc yz

	echo 'abc xyz' | tr -d ' '
output: abcxyz

18. Limit the internet speed of an application

sudo dnf install trickle
trickle -d 120 -u 99 firefox		// -d means download & -u means upload speed.

19. Install rpm package

sudo rpm -i <package-name>

20. Install downloaded rpm package file as an update

sudo rpm -U <package-name>

21. Some important tweaks in dnf.conf

sudo nano /etc/dnf/dnf.conf and write:

	fastermirror=True		//for faster downloads
	max_parallel_downloads=3	//3 is my choice to download multplie updates in a same time.
	defaultyes=True			//No need to press Y. Just press Enter.
	keepcache=True			//keep track of updates and save some time remembering it.

22. System information in detail

fpaste --sysinfo --printonly		//greater details than 'neofetch'


23. See software version supplied by dnf
rpm -q <package-name>

24. For debugging/reporting issue, one might need to install extra package.
sudo dnf debug-info <package-name-which-has-problem>			//note, not all packages supply this type 'debug' package

25. See last updated packages
rpm -q --last | head			// head will list last 10 output from the previous command or file.
rpm -q --last | head -n 5		// will list the names of last 5 updated packages
or
rpm -q --last | head -5


26. List all packages installed by user manually

	dnf repoquery --userinstalled
or
	dnf history userinstalled

27. See all history of when you install packages

dnf history				//cool shit

28. Copy all files from a folder and paste it.

cp *.* /path/to/folder				//First * will select all files and Second * will all types of file-extensions
						//Therefore any files with any extensions will be copied.
29. Example to count all lines

dnf list --installed | wc -l			// Will list out all total number of packages installed by counting all lines

30. Remove unnecessary bloatware.		//Fedora 35 official released on Nov 2, 2021. I upgraded it on Nov 3.

sudo dnf remove ibus-hangul			//Foreign language
sudo dnf remove ibus-pinyin			//Foreign language
sudo dnf remove ibus-libzhuyin			//Foreign languae
sudo dnf remove gnome-tour			//Uncessary tour

31. Enable 3rd party repo

sudo dnf config-manager --set-enabled <repo-name>

ex:	sudo dnf config-manager --set-enabled copr:copr.fedorainfracloud.org:atim:nushell	//to install nushell

32. Speed up dnf download process

sudo nano /etc/dnf/dnf.conf

	fastestmirror=True
	max_parallel_downloads=10

33. List all repositories from where updates are coming

dnf repolist
dnf repolist all
dnf repolist all | grep -i disabled
dnf repolist all | grep -i enabled

[ Delete the repo which you no longer need ]

cd /etc/yum.repos.d
ls
sudo rm <repo-name>

34. List all user installed python packages

pip list --user


36. Clean grub menu by remove unnecessary boot images like Ubuntu, Windows, etc, if you don't use

sudo efibootmgr -b <boot-order-number> --delete-bootnum		[WARNING: be carefull while typing boot order number] // delete it
sudo efibootmgr -A -b <boot-order-number>			// will deactivate from booting. For testing purpose.
sudo efibootmgr -a -b <boot-order-number>			// will activate for booting.


38. Remove a package coming as an update

sudo nano /etc/dnf/dnf.conf	
and write:
		exclude=<package name> <package name>		// Do this to package you hate or don't want to install
example:	exclude=gnome-tour				// I really hate this "gnome-tour" package. Useless for me.



39. See hardware capability

/lib64/ld-linux-x86-64.so.2 --help				// Notice the version of architecture it supports


40. Clone a git repo without having to fork it.

git clone <url>


41. Clone a repo but only keep track of files you actually need.

touch .gitignore				//Write file and foldernames in each line to ignore.
						//Use forward slash (i.e \) for space in folder or file name.
						//Use backward slash (i.e /) when your reach the end of file or folder name.

[Now you can delete those files and folder without having to reappear when you type, "git pull".]

43. Move back-n-forth between two directories

nextd		//move to next directory
prevd		//move to previous directory

[For this to work, you need to jump into some directory using "cd" command. Otherwise there is no place to jump.]

44. Install/Configure Firefox properly

- install all necessary media codecs and libraries mentioned in Fedora documentation
- enable some Firefox configs which are disabled by Fedora Devs as mentioned in Fedora documentaion

[Fedora save itself from proprietary licensing lawsuit by not installing certain packages by default.]

45. Check flaptak app permission given to the app

	flatpak info --show-permissions <app-id>
example:
	flatpak info --show-permissions com.github.KRTirtho.Spotube

[Get app ID using this command ------->	flatpak list]

46. Install Virtualization in one go

sudo dnf install @virtualization

[There are only handfull of Module or Group available. Most of them are to make devs life easier.]
[Always disable modules if you want to test a pre-release version of a distro like Fedora]
[Virt Manager (aka Virtual Manager) which uses KVM & support Qemu images, is the best free alternative to VMware & VirtualBox.]

47. Compression and Decompression of files using tool: gzip

gzip <file-name-to-compress>		// to compress the file
gzip -l <compressed-file-name>		// to see how well it compressed
gzip -d <compressed-file-name>		// to decompress the zip file

[Note: gzip only support compress/decompress of single file. It can't decompress a compressed directory. For that, we need TAR.]


48. Uninstall or remove installed rpm package

rpm -qa | grep -i <package>		// To search the exact package name to uninstall	//qa means "query all" packages
sudo rpm -e <package>			// Copy that exact package name and uninstall it

[Example:	i) rpm -qa | grep -i dbeaver	ii) sudo rpm -e dbeaver-ce-22.1.5-stable.x86_64 	OR  sudo rpm -e dbeaver-ce]

49. Find pid and kill parent process

pidof <>		example:->	pidof sudo
killall -9 <>		example:->	killall -9 8526

#works fine with sudo installation which u abruptly stopped.

50. Get a repositry URL/link when u are in your local copy of source-code.

git remote -v


51. Make GNOME-Terminal to open particular shell

gnome-terminal -- fish

#This can be used to create custom shortkey. like Super + W

52. Scramble a file to make it unreadable

shred <filename>

53. 
